<?php echo '<?php'; ?>

namespace <?php echo $this->namespace; ?>;

use Contain\Entity\AbstractEntity;
use Contain\Entity\Property\Property;
use Zend\EventManager\Event;
use Zend\EventManager\EventManager;

/**
 * <?php echo $this->name; ?> Entity (auto-generated by the Contain module)
 *
 * This instance should not be edited directly. Edit the definition file instead 
 * and recompile.
 */
class <?php echo $this->name; ?> extends AbstractEntity<?php 
    if ($this->implementors): ?> implements <?php echo implode(', ', $this->implementors); endif; ?>

{
    /**
     * Initializes the properties of this entity.
     *
     * @return  $this
     */
    public function init()
    {
<?php foreach ($this->properties as $name => $property): ?>
<?php if ($options = $property->getOptions() + $property->getType()->getOptions()): ?>
        $this->properties['<?php echo $name; ?>'] = new Property('\<?php echo get_class($property->getType()); ?>', <?php var_export($options); ?>);
<?php else: ?>
        $this->properties['<?php echo $name; ?>'] = new Property('\<?php echo get_class($property->getType()); ?>');
<?php endif; ?>
<?php endforeach; ?>
<?php echo $this->init; ?>
    }

